<UserControl 
    x:Class="EpiPlanTool.Views.ScheduleView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"  
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    xmlns:sco="clr-namespace:Siltronic.Wpf.Controls;assembly=SiltronicWPF"
    xmlns:v="clr-namespace:EpiPlanTool.Views"
    xmlns:vm="clr-namespace:EpiPlanTool.ViewModels"
    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
    xmlns:b="clr-namespace:EpiPlanTool.Behaviors"
    xmlns:ctl="clr-namespace:EpiPlanTool.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    mc:Ignorable="d" 
    x:Name="View" 
    d:DesignWidth="800" 
    d:DesignHeight="800"
  >
  <UserControl.Resources>

    <sys:Double x:Key="RowHeight">28</sys:Double>
    
    <Style TargetType="{x:Type sco:TimelineLabels}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Border 
              Background="{TemplateBinding BorderBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
              <ItemsPresenter />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="AllowDrop" Value="True" />
      <Setter Property="Focusable" Value="True" />
      <Setter Property="FocusManager.IsFocusScope" Value="True" />
      <Setter Property="dd:DragDrop.IsDragSource" Value="True" />
      <Setter Property="dd:DragDrop.IsDropTarget" Value="True" />
      <Setter Property="dd:DragDrop.DropHandler" Value="{Binding}" />
      <Setter Property="dd:DragDrop.DragHandler" Value="{Binding}" />
    </Style>

    <Style TargetType="{x:Type sco:TimelineHeader}">
      <Setter Property="FontSize" Value="12" />
      <Setter Property="FontWeight" Value="Bold" />
      <Setter Property="FontFamily" Value="Arial" />
      <Setter Property="Height" Value="28" />
      <Setter Property="Background" Value="Gainsboro"/>
      <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style TargetType="{x:Type ctl:ReactorTimeline}">
      <Setter Property="Height" Value="{StaticResource RowHeight}" />
      <Setter Property="Background" Value="White"   />
      <Style.Triggers>
        <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.FabClosed}">
          <Setter Property="Background" Value="#F0F0F0"   />
        </DataTrigger>
      </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="ReactorLabel" TargetType="{x:Type ctl:ReactorLabel}">
      <Grid>
        <Border
          BorderBrush="Black"
          BorderThickness=".5,1,1,.5"
          Height="{StaticResource RowHeight}"
          Background="{TemplateBinding Background}"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
        >
          <!-- Label and status-->
          <StackPanel
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
          >
            <StackPanel.Style>
              <Style TargetType="{x:Type StackPanel}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.FabClosed}" >
                    <Setter Property="Background" Value="Gray" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </StackPanel.Style>
            <!-- Label -->
            <TextBlock 
              Text="{Binding Caption}"
              Foreground="Black"
              FontWeight="Bold"
              FontSize="12"
              FontFamily="Arial"
              ToolTip="{Binding Chambers}"
              TextAlignment="Center"
            >
              <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.FabClosed}" >
                      <Setter Property="Foreground" Value="DarkGray" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
          </StackPanel>
        </Border>
        
        <!-- N/P type status-->
        <Border 
          CornerRadius="12"
          HorizontalAlignment="Left"
          BorderBrush="Black"
          Height="20"
          Width="20"
          Margin="4,0,0,0"
          DataContext="{Binding Status}"
        >
          <Border.Style>
            <Style TargetType="{x:Type Border}">
              <Style.Triggers>
                <DataTrigger Binding="{Binding npType}" Value="N">
                  <Setter Property="Background" Value="SkyBlue"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding npType}" Value="P">
                  <Setter Property="Background" Value="YellowGreen" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
          <TextBlock 
            Text="{Binding npType}" 
            ToolTip="{Binding DopantType}"
            FontFamily="Arial"
            FontSize="9"
            FontWeight="Bold"
            Foreground="Black"
            TextAlignment="Center"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
          />
        </Border>
        <!-- RTC Status Color / cap -->
        <Border
          Width="11"
          HorizontalAlignment="Right"
          BorderThickness="1,1,1,1"
          BorderBrush="Black"
        >
          <Border.Style>
            <Style TargetType="{x:Type Border}">
              <Style.Triggers>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.FabClosed}" >
                  <Setter Property="Background" Value="Gray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.Down}" >
                  <Setter Property="Background" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.Production}" >
                  <Setter Property="Background" Value="PaleGreen" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.Matflow}" >
                  <Setter Property="Background" Value="Yellow" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.Setup}" >
                  <Setter Property="Background" Value="MediumPurple" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.QDEG}" >
                  <Setter Property="Background" Value="Orange" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.Other}" >
                  <Setter Property="Background" Value="Beige" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ToolStatus}" Value="{x:Static vm:RtcStatus.Test}" >
                  <Setter Property="Background" Value="PowderBlue" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
        </Border>
      </Grid>
    </ControlTemplate>
    
    <Style TargetType="{x:Type ctl:ReactorLabel}" >
      <Setter Property="Template" Value="{StaticResource ReactorLabel}" />
      <Setter Property="Focusable" Value="True" />
      <Setter Property="Background" Value="Gainsboro"/>
      <Setter Property="Foreground" Value="Black" />
      <Setter Property="AllowDrop" Value="True" />
    </Style>

  </UserControl.Resources>
  
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    
    <ctl:ReactorSchedule 
      Grid.Row="0"
      x:Name="Schedule"
      Start="{Binding Start}"
      End="{Binding End}"
      ItemsSource="{Binding Reactors, IsAsync=True}"
      ctl:ReactorSchedule.FocusedTasks="{Binding BookedOrders.FocusedTasks}"
      LabelWidth="145"
      TickDensity="00:00:02:30"
      HorizontalAlignment="Stretch"
      PreviewMouseWheel="Schedule_MouseWheel"
    >
      <ctl:ReactorSchedule.Headers>
        <sco:TimelineHeader 
          Interval="01:00:00:00"  
          DateFormat="MM/dd"
          FontSize="12"
          FontWeight="Bold"
          FontFamily="Arial"
          Background="WhiteSmoke"
          Height="26"
        />
        <!--Background="#217491"-->
        <sco:TimelineHeader 
          Name="hours"
          Interval="00:01:00:00"  
          DateFormat="HH"
          FontSize="9"
          FontWeight="Bold"
          FontFamily="Arial"
          Background="WhiteSmoke"
          Height="18"
          SizeChanged="TimelineHeader_SizeChanged"
        />
      </ctl:ReactorSchedule.Headers>
    </ctl:ReactorSchedule>
    
    <v:BookedOrdersView 
      Grid.Row="1"
      HorizontalAlignment="Left"
      VerticalAlignment="Stretch"
      DataContext="{Binding BookedOrders, IsAsync=True}"
    />
    
  </Grid>
</UserControl>
